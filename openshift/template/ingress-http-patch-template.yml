apiVersion: v1
kind: Template
labels:
  app: ${APP_NAME}
  template: ${APP_NAME}
message: ${APP_NAME}
metadata:
  annotations:
    description: ${APP_NAME}.
    openshift.io/display-name: ${APP_NAME}
    version: 1.0.0
  name: ingress
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ingressgateway-${PROJECT_NAME}
      app.kubernetes.io/component: gateways
      app.kubernetes.io/instance: ${ISTIO_CONTROL_PLANE}
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: gateways
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.0.2-7.el8-1
      chart: gateways
      heritage: Tiller
      istio: ingressgateway-${PROJECT_NAME}
      maistra.io/owner: ${ISTIO_CONTROL_PLANE}
      release: istio
    name: ingressgateway-${PROJECT_NAME}
  spec:
    progressDeadlineSeconds: 1200
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ingressgateway-${PROJECT_NAME}
        istio: ingressgateway-${PROJECT_NAME}
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: "false"
        creationTimestamp: null
        labels:
          app: ingressgateway-${PROJECT_NAME}
          chart: gateways
          heritage: Tiller
          istio: ingressgateway-${PROJECT_NAME}
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - args:
          - proxy
          - router
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --log_output_level=default:info
          - --drainDuration
          - 45s
          - --parentShutdownDuration
          - 1m0s
          - --connectTimeout
          - 10s
          - --serviceCluster
          - ingressgateway-${PROJECT_NAME}
          - --zipkinAddress
          - zipkin.${ISTIO_CONTROL_PLANE}:9411
          - --proxyAdminPort
          - "15000"
          - --statusPort
          - "15020"
          - --controlPlaneAuthPolicy
          - NONE
          - --discoveryAddress
          - istio-pilot.${ISTIO_CONTROL_PLANE}:15010
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ISTIO_META_ROUTER_MODE
            value: sni-dnat
          image: ${PROXY_IMAGE}
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15020
            name: status-port
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 5443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 600m
              memory: 900Mi
            requests:
              cpu: 400m
              memory: 700Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
#          volumeMounts:
#          - mountPath: /etc/istio/proxy
#            name: istio-envoy
#          - mountPath: /etc/certs/
#            name: istio-certs
#            readOnly: true
#        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 60
#        volumes:
#        - emptyDir:
#            medium: Memory
#          name: istio-envoy
#        - name: istio-certs
#          secret:
#            defaultMode: 400
#            optional: true
#            secretName: istio.default
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ingressgateway-${PROJECT_NAME}
      istio: ingressgateway-${PROJECT_NAME}
    name: ingressgateway-svc
  spec:
    ports:
    - name: status-port
      port: 15020
      protocol: TCP
      targetPort: 15020
    - name: http-${INGRESS_PORT}
      port: ${{INGRESS_PORT}}
    selector:
      app: ingressgateway-${PROJECT_NAME}
      istio: ingressgateway-${PROJECT_NAME}
- apiVersion: networking.istio.io/v1alpha3
  kind: Gateway
  metadata:
    name: ingressgateway-gw
  spec:
    selector:
      istio: ingressgateway-${PROJECT_NAME}
    servers:
    - hosts:
      - ingress-${PROJECT_NAME}.apps.${OPENSHIFT_HOST}
      port:
        name: http-${INGRESS_PORT}
        number: ${{INGRESS_PORT}}
        protocol: HTTP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ingressgateway-${PROJECT_NAME}
      istio: ingressgateway-${PROJECT_NAME}
    name: ingressgateway-http
  spec:
    host: ingress-${PROJECT_NAME}.apps.${OPENSHIFT_HOST}
    port:
      targetPort: http-${INGRESS_PORT}
    to:
      kind: Service
      name: ingressgateway-svc
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    name: internal-host-vs
  spec:
    exportTo:
    - .
    gateways:
    - ingressgateway-gw
    hosts:
    - ingress-${PROJECT_NAME}.apps.${OPENSHIFT_HOST}
    http:
    - match:
      - uri:
          prefix: /${INTERNAL_PREFIX}
      route:
      - destination:
          host: ${INTERNAL_HOST}
          port:
            number: ${{INTERNAL_PORT}}
parameters:
- name: PROJECT_NAME
  required: true
- name: APP_NAME
  required: true
- name: ISTIO_CONTROL_PLANE
  required: true
- name: PROXY_IMAGE
  required: true
- name: OPENSHIFT_HOST
  required: true
- name: INGRESS_PORT
  required: true
- name: INTERNAL_HOST
  required: true
- name: INTERNAL_PORT
  required: true
- name: INTERNAL_PREFIX
  required: true
